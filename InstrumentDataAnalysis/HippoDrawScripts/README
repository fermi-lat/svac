These are some modules to make merit and svac ntuple analysis
a little easier from Python.  

svac_analysis.py contains classes that encapsulate HippoDraw
functionality for more compact user code.  The module file itself
contains usage examples; see the code after the line

if __name__ == '__main__':

One should also compare this package's version of drawMerit.py to the
SVAC version,

http://www-glast.slac.stanford.edu/IntegrationTest/SVAC/Instrument_Analysis/UsefulStuff/CodeExamples/drawMerit.py

TTreeWrapper.py has a small class that uses pyROOT to access ROOT
TTrees.  The syntax it provides is more natural to Python, but the
framework is rather inefficent for accessing large datasets, but will
be more familiar to ROOT users.  The module code shows some simple
examples.

To use these modules, download them to a local directory and set your
PYTHONPATH environment variable to include that directory, e.g., on
linux (under csh) do

% setenv PYTHONPATH /home/jchiang/svac_scripts:${PYTHONPATH}

or in your Python script, put the lines

import sys
sys.path.insert(0, '/home/jchiang/svac_scripts')

at the top; then from Python, you can do things like

>>> from svac_analysis import RootNTuple
>>> merit = RootNTuple("merit.root", "MeritTuple")
>>> my_hist = merit.hist("TkrSumKalEne", xlog=1)

<jchiang@slac.stanford.edu>