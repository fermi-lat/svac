//##############################################################
//
// Minimal job options file for reading root events + calib services
//

// List of Dlls
ApplicationMgr.DLLs   = { "GlastSvc"};
ApplicationMgr.DLLs   += {"CalibSvc"};
ApplicationMgr.DLLs +={   "RootIo"};


// List of required services
 ApplicationMgr.ExtSvc   = {"GlastDetSvc", "GlastEventSelector/EventSelector" ,
"EventCnvSvc" };

 ApplicationMgr.ExtSvc  += {"OracleDbSvc" };

OracleDbSvc.dbName = "slac_tcp";
OracleDbSvc.userName = "GLAST_CAL";
OracleDbSvc.passWord = "9square#";

ApplicationMgr.TopAlg = {"CalibEvtClock", 
		      "RandomFillTot"};

// Persistency service setup:
EventPersistencySvc.CnvServices = {"EventCnvSvc"};

// Next few lines from AcdDigi test jobOptions
EventSelector.Input = "NONE";

// Set output level threshold (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
MessageSvc.OutputLevel      = 2;

ApplicationMgr.EvtMax = 1;

// Start up a CalibDataSvc 
ApplicationMgr.ExtSvc += {"CalibDataSvc"};

ApplicationMgr.ExtSvc += {"CalibMySQLCnvSvc", "CalibXmlCnvSvc" };

DetectorPersistencySvc.CnvServices += {"CalibMySQLCnvSvc"};
DetectorPersistencySvc.CnvServices += {"CalibXmlCnvSvc"};

CalibDataSvc.CalibFlavorList = {"ideal", "chen_test_cal", "chen_test_tkr"};
CalibDataSvc.CalibInstrumentName = "EM"; 

// CalibDataSvc properties below are explicitly set to the
// default values as established in CalibDataSvc.cxx.  
// They're listed below in order of likelihood of need to override, 
// from most to least likely.
// Storage type of 14 corresponds to MYSQL
CalibDataSvc.CalibInstrumentName = "EM";
CalibDataSvc.CalibStorageType = 14;
CalibDataSvc.CalibRootName = "Calib";

// Value of "*" means 'use default MySQL host', so currently (May, 2003)
// equivalent to value of "centaurusa.slac.stanford.edu".
// For local MySQL server, use value "localhost"
CalibMySQLCnvSvc.Host = "*";

CalibEvtClock.startTime = "2003-9-25_00:20";
CalibEvtClock.delayTime = 3;

// properties for GetCalElecGain
GetCalElecGain.source = 0;
GetCalElecGain.hardware = 0;
GetCalElecGain.location = 0;
GetCalElecGain.procLevel = 0;
GetCalElecGain.status = 0;
GetCalElecGain.validStartTime = "2003-01-01 00:00";
GetCalElecGain.validEndTime = "2003-12-30 00:00";
GetCalElecGain.runStartTime = "2004-01-11 12:00";
GetCalElecGain.runEndTime = "2004-01-11 14:00";
GetCalElecGain.creationTime = "2003-12-12 12:00";
GetCalElecGain.software = "calibGenCAL";
GetCalElecGain.version = "v0";
GetCalElecGain.dataSize = "-9999";
GetCalElecGain.creator = "Xin Chen";
GetCalElecGain.description = "";
GetCalElecGain.calibFlavor = "chen_test_cal";

// properties for GetCalPedestal
GetCalPedestal.source = 0;
GetCalPedestal.hardware = 0;
GetCalPedestal.location = 0;
GetCalPedestal.procLevel = 0;
GetCalPedestal.status = 0;
GetCalPedestal.validStartTime = "2003-01-01 00:00";
GetCalPedestal.validEndTime = "2003-12-30 00:00";
GetCalPedestal.runStartTime = "2004-01-11 12:00";
GetCalPedestal.runEndTime = "2004-01-11 14:00";
GetCalPedestal.creationTime = "2003-12-12 12:00";
GetCalPedestal.software = "calibGenCAL";
GetCalPedestal.version = "v0";
GetCalPedestal.dataSize = "-9999";
GetCalPedestal.creator = "Xin Chen";
GetCalPedestal.description = "";
GetCalPedestal.calibFlavor = "chen_test_cal";

// properties for GetCalLightAsy
GetCalLightAsy.source = 0;
GetCalLightAsy.hardware = 0;
GetCalLightAsy.location = 0;
GetCalLightAsy.procLevel = 0;
GetCalLightAsy.status = 0;
GetCalLightAsy.validStartTime = "2003-01-01 00:00";
GetCalLightAsy.validEndTime = "2003-12-30 00:00";
GetCalLightAsy.runStartTime = "2004-01-11 12:00";
GetCalLightAsy.runEndTime = "2004-01-11 14:00";
GetCalLightAsy.creationTime = "2003-12-12 12:00";
GetCalLightAsy.software = "calibGenCAL";
GetCalLightAsy.version = "v0";
GetCalLightAsy.dataSize = "-9999";
GetCalLightAsy.creator = "Xin Chen";
GetCalLightAsy.description = "";
GetCalLightAsy.calibFlavor = "chen_test_cal";

// properties for GetTkrBadStrip
GetTkrBadStrip.source = 0;
GetTkrBadStrip.hardware = 0;
GetTkrBadStrip.location = 0;
GetTkrBadStrip.procLevel = 0;
GetTkrBadStrip.status = 0;
GetTkrBadStrip.validStartTime = "2003-01-01 00:00";
GetTkrBadStrip.validEndTime = "2003-12-30 00:00";
GetTkrBadStrip.runStartTime = "2004-01-11 12:00";
GetTkrBadStrip.runEndTime = "2004-01-11 14:00";
GetTkrBadStrip.creationTime = "2003-12-12 12:00";
GetTkrBadStrip.software = "calibGenCAL";
GetTkrBadStrip.version = "v0";
GetTkrBadStrip.dataSize = "-9999";
GetTkrBadStrip.creator = "Xin Chen";
GetTkrBadStrip.description = "";
GetTkrBadStrip.calibFlavor = "chen_test_tkr";

// properties for RandomFillTot
RandomFillTot.source = 0;
RandomFillTot.hardware = 0;
RandomFillTot.location = 0;
RandomFillTot.procLevel = 0;
RandomFillTot.status = 0;
RandomFillTot.validStartTime = "2003-01-01 00:00";
RandomFillTot.validEndTime = "2003-12-30 00:00";
RandomFillTot.runStartTime = "2004-01-11 12:00";
RandomFillTot.runEndTime = "2004-01-11 14:00";
RandomFillTot.creationTime = "2003-12-12 12:00";
RandomFillTot.software = "calibGenTKR";
RandomFillTot.version = "v0";
RandomFillTot.dataSize = "-9999";
RandomFillTot.creator = "Xin Chen";
RandomFillTot.description = "";