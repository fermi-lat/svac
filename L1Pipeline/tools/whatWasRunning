#!/usr/bin/env python

import datetime
import os
import re
import sys
import time

lsfFormat = "%b %d %H:%M:%S"
pipelineFormat = "%d-%b-%Y %H:%M:%S"
thisYear = time.gmtime()[0]
never = datetime.datetime(3000, 12, 31)

def main():
    host, start, stop = sys.argv[1:]
    tStart = parseDate(start, pipelineFormat)
    tStop = parseDate(stop, pipelineFormat)

    cmd = 'bjobs -d -u all -m %s' % host
    pipe = os.popen(cmd)
    junk = pipe.next()
    jobs = [parseLine(line) for line in pipe]

    jobs = [line[0] for line in jobs if line[1] <= tStop]

    for job in jobs:
        cmd = 'bjobs -l %s' % job
        lines = os.popen(cmd).readlines()
        jStart, jStop = parseLong(lines)
        if not (jStop < tStart or jStart > tStop):
            print job
            pass
        continue
    
    return

def parseDate(dateStr, format):
    date = list(time.strptime(dateStr, format)[0:6])
    date[0] = thisYear
    date = datetime.datetime(*date)
    return date

def parseLine(lineStr):
    fields = lineStr.split()
    if len(fields) < 10: return '0', never
    job = fields[0]
    mon, day, hm = fields[-3:]
    date = parseDate(' '.join([mon, day, hm+':00']), lsfFormat)
    return job, date

timeLine = '^[A-Z][a-z]{2} ([A-Z][a-z]{2} [0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}): (Started|Done|Exited)'
timeRe = re.compile(timeLine)
def parseLong(lines):
    tStart = None
    tStop = None
    for line in lines:
        mob = timeRe.match(line)
        if mob:
            tStr, which = mob.groups()
            date = parseDate(tStr, lsfFormat)
            if which == 'Started':
                tStart = date
            elif which in ['Done', 'Exited']:
                tStop = date
            else:
                print 'WTF:', line
            pass
        continue
    if None in [tStart, tStop]:
        for line in lines: print  >> sys.stderr, line
        pass
    return tStart, tStop


if __name__ == "__main__":
    main()
    pass

