<?xml version="1.0" encoding="UTF-8"?>
<pipeline
   xmlns="http://glast-ground.slac.stanford.edu/pipeline"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://glast-ground.slac.stanford.edu/pipeline http://glast-ground.slac.stanford.edu/Pipeline-II/schemas/2.0/pipeline.xsd">

<variables>
      <var name="L1ProcROOT">%(L1ProcROOT)s</var>
</variables>

<task name="L1Proc" version="%(L1Version)s" type="Data">
   <prerequisites>
      <prerequisite name="DOWNLINK_ID" type="string"/>
      <prerequisite name="DOWNLINK_RAWDIR" type="string"/>
   </prerequisites>

   <process name="findRunDirs">
      <job executable="${L1ProcROOT}/findRunDirs.py" maxCPU="%(maxCpu)s"/>
      <createsSubtasks>
         <subtask>doRun</subtask>
      </createsSubtasks>
   </process>

   <process name="exportFT1">
      <job executable="${L1ProcROOT}/exportStuff.py" maxCPU="%(maxCpu)s"/>
      <depends>
         <after process="doRun.registerFT1" status="SUCCESS"/>
      </depends>
   </process>

   <process name="launchASP">
      <job executable="${L1ProcROOT}/launchASP.py" maxCPU="%(maxCpu)s"/>
      <depends>
         <after process="doRun.registerFT1" status="DONE"/>
      </depends>
   </process>

   <task name="doRun" version="%(L1Version)s" type="Data">

      <prerequisites>
         <prerequisite name="RUNID" type="string"/>
         <prerequisite name="RUN_RAWDIR" type="string"/>
         <prerequisite name="RUN_ROOTDIR" type="string"/>
      </prerequisites>

      <process name="findChunks">
         <job executable="${L1ProcROOT}/findChunks.py" maxCPU="%(maxCpu)s"/>
         <createsSubtasks>
            <subtask>doChunk</subtask>
         </createsSubtasks>
      </process>

      <process name="mergeDigi">
         <job executable="${L1ProcROOT}/mergeStuff.py" maxCPU="%(maxCpu)s"/>
         <depends>
            <after process="doChunk.digitization" status="DONE"/>
         </depends>
      </process>
      <process name="registerDigi">
         <job executable="${L1ProcROOT}/registerStuff.py" maxCPU="%(maxCpu)s"/>
         <depends>
            <after process="mergeDigi" status="SUCCESS"/>
         </depends>
      </process>

      <process name="mergeDigiMon">
         <job executable="${L1ProcROOT}/mergeStuff.py" maxCPU="%(maxCpu)s"/>
         <depends>
            <after process="doChunk.digiMon" status="DONE"/>
         </depends>
      </process>
      <process name="registerDigiMon">
         <job executable="${L1ProcROOT}/registerStuff.py" maxCPU="%(maxCpu)s"/>
         <depends>
            <after process="mergeDigiMon" status="SUCCESS"/>
         </depends>
      </process>

      <process name="mergeReconChunks">
         <job executable="${L1ProcROOT}/mergeStuff.py" maxCPU="%(maxCpu)s"/>
         <depends>
            <after process="doChunk.mergeReconCrumbs" status="DONE"/>
         </depends>
      </process>
      <process name="registerRecon">
         <job executable="${L1ProcROOT}/registerStuff.py" maxCPU="%(maxCpu)s"/>
         <depends>
            <after process="mergeReconChunks" status="SUCCESS"/>
         </depends>
      </process>

      <process name="mergeReconMon">
         <job executable="${L1ProcROOT}/mergeStuff.py" maxCPU="%(maxCpu)s"/>
         <depends>
            <after process="doChunk.reconMon" status="DONE"/>
         </depends>
      </process>
      <process name="registerReconMon">
         <job executable="${L1ProcROOT}/registerStuff.py" maxCPU="%(maxCpu)s"/>
         <depends>
            <after process="mergeReconMon" status="SUCCESS"/>
         </depends>
      </process>

      <process name="mergeSvacTuple">
         <job executable="${L1ProcROOT}/mergeStuff.py" maxCPU="%(maxCpu)s"/>
         <depends>
            <after process="doChunk.svacTuple" status="DONE"/>
         </depends>
      </process>
      <process name="registerSvacTuple">
         <job executable="${L1ProcROOT}/registerStuff.py" maxCPU="%(maxCpu)s"/>
         <depends>
            <after process="mergeSvacTuple" status="SUCCESS"/>
         </depends>
      </process>

      <process name="mergeFT1">
         <job executable="${L1ProcROOT}/mergeStuff.py" maxCPU="%(maxCpu)s"/>
         <depends>
            <after process="doChunk.FT1" status="DONE"/>
         </depends>
      </process>
      <process name="registerFT1">
         <job executable="${L1ProcROOT}/registerStuff.py" maxCPU="%(maxCpu)s"/>
         <depends>
            <after process="mergeFT1" status="SUCCESS"/>
         </depends>
      </process>


      <task name="doChunk" version="%(L1Version)s" type="Data">

         <prerequisites>
            <prerequisite name="digiChunkFile" type="string"/>
            <prerequisite name="chunkDir" type="string"/>
         </prerequisites>

         <process name="digitization">
            <job executable="${L1ProcROOT}/digitize.py" maxCPU="%(maxCpu)s"/>
         </process>

         <process name="digiMon">
            <job executable="${L1ProcROOT}/monitorDigi.py" maxCPU="%(maxCpu)s"/>
            <depends>
               <after process="digitization" status="SUCCESS"/>
            </depends>
         </process>

         <process name="setupRecon">
            <job executable="${L1ProcROOT}/setupRecon.py" maxCPU="%(maxCpu)s"/>
            <depends>
               <after process="digitization" status="SUCCESS"/>
            </depends>
            <createsSubtasks>
               <subtask>doCrumb</subtask>
            </createsSubtasks>
         </process>
         <process name="mergeReconCrumbs">
            <job executable="${L1ProcROOT}/mergeStuff.py" maxCPU="%(maxCpu)s"/>
            <depends>
               <after process="doCrumb.recon" status="DONE"/>
            </depends>
         </process>

         <process name="reconMon">
           <job executable="${L1ProcROOT}/monitorRecon.py" maxCPU="%(maxCpu)s"/>
           <depends>
               <after process="mergeReconCrumbs" status="SUCCESS"/>
            </depends>
         </process>

         <process name="svacTuple">
            <job executable="${L1ProcROOT}/makeSvac.py" maxCPU="%(maxCpu)s"/>
            <depends>
               <after process="mergeReconCrumbs" status="SUCCESS"/>
            </depends>
         </process>

         <process name="FT1">
            <job executable="${L1ProcROOT}/makeFT1.py" maxCPU="%(maxCpu)s"/>
           <depends>
               <after process="mergeReconCrumbs" status="SUCCESS"/>
            </depends>
         </process>


         <task name="doCrumb" version="%(L1Version)s" type="Data">

            <prerequisites>
               <prerequisite name="reconCrumbFile" type="string"/>
            </prerequisites>

            <process name="recon">
               <job executable="${L1ProcROOT}/doRecon.py" maxCPU="%(maxCpu)s"/>
            </process>
         </task>

      </task>

   </task>

</task>
</pipeline>

