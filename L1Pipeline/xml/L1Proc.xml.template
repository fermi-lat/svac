<?xml version="1.0" encoding="UTF-8"?>
<pipeline
  xmlns="http://glast-ground.slac.stanford.edu/pipeline"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://glast-ground.slac.stanford.edu/pipeline http://glast-ground.slac.stanford.edu/Pipeline-II/schemas/2.0/pipeline.xsd">

<task name="%(L1Name)s" version="%(L1Version)s" type="Data">

  <variables>
    <var name="L1ProcROOT">%(L1ProcROOT)s</var>
    <var name="LD_LIBRARY_PATH">%(libraryPath)s</var>
    <var name="L1_TASK_NAME">%(L1Name)s</var>
    <var name="L1_TASK_VERSION">%(L1Version)s</var>
    <var name="L1_INSTALL_DIR">%(installRoot)s</var>
    <var name="L1_BUILD_DIR">%(L1CmtBase)s</var>
    <var name="L1TrendVersion">Prompt</var> <!-- override if reprocessing -->
  </variables>

  <prerequisites>
    <prerequisite name="DOWNLINK_RAWDIR" type="string"/>
    <prerequisite name="DOWNLINK_ID" type="string"/>
  </prerequisites>

  <process name="findRunDirs">
    <job executable="${L1ProcROOT}/findRunDirs.py" batchOptions=" -q %(expressQ)s -sp %(highPriority)d " />
    <createsSubtasks>
      <subtask>doRun</subtask>
      <subtask>doLci</subtask>
      <subtask>cleanupIncompleteRun</subtask>
    </createsSubtasks>
  </process>

  <process name="ft2Gaps">
    <job executable="${L1ProcROOT}/ft2Db.py" batchOptions=" -q %(expressQ)s "/>
  </process>

  <process name="kludgeAsp">
    <job executable="${L1ProcROOT}/kludgeAsp.py" batchOptions=" -q %(expressQ)s " />
    <depends>
      <after process="doRun.registerFT1" status="SUCCESS"/>
      <after process="doRun.registerFT2" status="SUCCESS"/>
    </depends>
  </process>

  <process name="cleanupDl">
    <job executable="${L1ProcROOT}/deleteDirs.py" batchOptions=" -q %(expressQ)s " />
    <depends>
      <after process="doLci.checkRunLci" status="SUCCESS"/>
      <after process="doRun.checkRun" status="SUCCESS"/>
    </depends>
  </process>

  <task name="doRun" version="%(L1Version)s" type="Data">

    <prerequisites>
      <prerequisite name="DATASOURCE" type="string"/>
      <prerequisite name="RUNID" type="string"/>
      <prerequisite name="RUNSTATUS" type="string"/>
      <prerequisite name="tStart" type="float"/>
      <prerequisite name="tStop" type="float"/>
   </prerequisites>

    <process name="findChunks">
      <job executable="${L1ProcROOT}/findChunks.py" batchOptions=" -q %(expressQ)s -E ${L1ProcROOT}/lockFile.py -sp %(highPriority)d " />
      <createsSubtasks>
        <subtask>doChunk</subtask>
      </createsSubtasks>
    </process>

    <process name="copyM7">
      <job executable="${L1ProcROOT}/copyM7.py" batchOptions=" -q %(shortQ)s " />
    </process>

    <process name="registerM7">
      <variables>
        <var name="parentProcess">copyM7</var>
        <var name="dataType">MAGIC7</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="copyM7" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="mergeDigi">
      <variables>
        <var name="fileType">digi</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(mediumQ)s -sp %(highPriority)d -R &quot;select[scratch&gt;5]&quot; " />
      <depends>
        <after process="doChunk.digitization" status="DONE"/>
      </depends>
    </process>

    <process name="registerDigi">
      <variables>
        <var name="parentProcess">mergeDigi</var>
        <var name="dataType">DIGI</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeDigi" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="mergeDigiEor">
      <variables>
        <var name="fileType">digiEor</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1]&quot; "/>
      <depends>
        <after process="doChunk.digiEor" status="DONE"/>
      </depends>
    </process>
 
    <process name="registerDigiEor">
      <variables>
        <var name="parentProcess">mergeDigiEor</var>
        <var name="dataType">DIGIHIST</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeDigiEor" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="digiEorAlarm">
      <variables>
        <var name="fileType">digiEor</var>
      </variables>
      <job executable="${L1ProcROOT}/alarmHandler.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="mergeDigiEor" status="SUCCESS"/>
      </depends>
    </process>

    <process name="ingestDigiEorRun">
      <variables>
        <var name="reportType">digiEorAlarm</var>
      </variables>
      <job executable="${L1ProcROOT}/ingestRun.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1 &amp;&amp; linux64]&quot; "/>
      <depends>
        <after process="digiEorAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="digiEorLogger">
      <variables>
        <var name="fileType">digiEorAlarm</var>
      </variables>
      <job executable="${L1ProcROOT}/alarmLogger.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="digiEorAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="registerDigiEorAlarm">
      <variables>
        <var name="parentProcess">digiEorAlarm</var>
        <var name="dataType">digiEorAlarm</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="digiEorAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="acdPlots">
      <job executable="${L1ProcROOT}/acdPlots.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="mergeDigiEor" status="SUCCESS"/>
      </depends>
    </process>

    <process name="registerAcdPlots">
      <variables>
        <var name="parentProcess">acdPlots</var>
        <var name="dataType">ACDPLOTS</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="acdPlots" status="SUCCESS"/>
      </depends>
    </process>

    <process name="mergeDigiTrend">
      <variables>
        <var name="fileType">digiTrend</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1]&quot; "/>
      <depends>
        <after process="doChunk.digiTrend" status="DONE"/>
      </depends>
    </process>
 
    <process name="registerDigiTrend">
      <variables>
        <var name="parentProcess">mergeDigiTrend</var>
        <var name="dataType">DIGITREND</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeDigiTrend" status="SUCCESS"/>
      </depends>
    </process>

    <process name="ingestDigiTrend">
      <variables>
        <var name="reportType">digiTrend</var>
      </variables>
      <job executable="${L1ProcROOT}/ingestTrending.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1 &amp;&amp; linux64]&quot; "/>
      <depends>
        <after process="mergeDigiTrend" status="SUCCESS"/>
      </depends>
    </process>

    <process name="digiTrendAlarm">
      <variables>
        <var name="fileType">digiTrend</var>
      </variables>
      <job executable="${L1ProcROOT}/alarmHandler.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="mergeDigiTrend" status="SUCCESS"/>
      </depends>
    </process>

    <process name="digiTrendLogger">
      <variables>
        <var name="fileType">digiTrendAlarm</var>
      </variables>
      <job executable="${L1ProcROOT}/alarmLogger.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="digiTrendAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="registerDigiTrendAlarm">
      <variables>
        <var name="parentProcess">digiTrendAlarm</var>
        <var name="dataType">digiTrendAlarm</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="digiTrendAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="ingestDigiTrendRun">
      <variables>
        <var name="reportType">digiTrendAlarm</var>
      </variables>
      <job executable="${L1ProcROOT}/ingestRun.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1 &amp;&amp; linux64]&quot; "/>
      <depends>
        <after process="digiTrendAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="mergeCalEor">
      <variables>
        <var name="fileType">calEor</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1]&quot; "/>
      <depends>
        <after process="doChunk.calEor" status="DONE"/>
      </depends>
    </process>
 
    <process name="registerCalEor">
      <variables>
        <var name="parentProcess">mergeCalEor</var>
        <var name="dataType">CALHIST</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeCalEor" status="SUCCESS"/>
      </depends>
    </process>

    <process name="mergeCalTrend">
      <variables>
        <var name="fileType">calTrend</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1]&quot; "/>
      <depends>
        <after process="doChunk.calTrend" status="DONE"/>
      </depends>
    </process>
 
    <process name="registerCalTrend">
      <variables>
        <var name="parentProcess">mergeCalTrend</var>
        <var name="dataType">CALTREND</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeCalTrend" status="SUCCESS"/>
      </depends>
    </process>

    <process name="ingestCalTrend">
      <variables>
        <var name="reportType">calTrend</var>
      </variables>
      <job executable="${L1ProcROOT}/ingestTrending.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1 &amp;&amp; linux64]&quot; "/>
      <depends>
        <after process="mergeCalTrend" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="mergeFastMonError">
      <variables>
        <var name="fileType">fastMonError</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(shortQ)s "/>
      <depends>
        <after process="doChunk.fastMonTuple" status="DONE"/>
      </depends>
    </process>

    <process name="registerFastMonError">
      <variables>
        <var name="parentProcess">mergeFastMonError</var>
        <var name="dataType">FASTMONERROR</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeFastMonError" status="SUCCESS"/>
      </depends>
    </process>

    <process name="ingestFastMonErrorRun">
      <variables>
        <var name="reportType">fastMonError</var>
      </variables>
      <job executable="${L1ProcROOT}/ingestRun.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1 &amp;&amp; linux64]&quot; "/>
      <depends>
        <after process="mergeFastMonError" status="SUCCESS"/>
      </depends>
    </process>

    <process name="mergeFastMonHist">
      <variables>
        <var name="fileType">fastMonHist</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(shortQ)s -R &quot;select[scratch&gt;1]&quot; "/>
      <depends>
        <after process="doChunk.fastMonHist" status="DONE"/>
      </depends>
    </process>

    <process name="registerFastMonHist">
      <variables>
        <var name="parentProcess">mergeFastMonHist</var>
        <var name="dataType">FASTMONHIST</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeFastMonHist" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="compDigiFastMon">
      <variables>
        <var name="fileType">compareDFm</var>
      </variables>
      <job executable="${L1ProcROOT}/compDigiFastMon.py" batchOptions=" -q %(mediumQ)s -R &quot;select[scratch&gt;1]&quot; "/>
      <depends>
        <after process="mergeDigi" status="SUCCESS"/>
        <after process="mergeFastMonHist" status="SUCCESS"/>
      </depends>
    </process>

    <process name="registerCmpDFm">
      <variables>
        <var name="parentProcess">compDigiFastMon</var>
        <var name="dataType">COMPAREDFM</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="compDigiFastMon" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="mergeFastMonTuple">
      <variables>
        <var name="fileType">fastMonTuple</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(mediumQ)s -R &quot;select[scratch&gt;1]&quot; "/>
      <depends>
        <after process="doChunk.fastMonTuple" status="DONE"/>
      </depends>
    </process>

    <process name="registerFastMonTuple">
      <variables>
        <var name="parentProcess">mergeFastMonTuple</var>
        <var name="dataType">FASTMONTUPLE</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeFastMonTuple" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="fastMonHistAlarm">
      <variables>
        <var name="fileType">fastMonHist</var>
      </variables>
      <job executable="${L1ProcROOT}/alarmHandler.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="mergeFastMonHist" status="SUCCESS"/>
      </depends>
    </process>

    <process name="fastMonHistLogger">
      <variables>
        <var name="fileType">fastMonHistAlarm</var>
      </variables>
      <job executable="${L1ProcROOT}/alarmLogger.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="fastMonHistAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="registerFastMonHistAlarm">
      <variables>
        <var name="parentProcess">fastMonHistAlarm</var>
        <var name="dataType">fastMonHistAlarm</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="fastMonHistAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="ingestFastMonHistRun">
      <variables>
        <var name="reportType">fastMonHistAlarm</var>
      </variables>
      <job executable="${L1ProcROOT}/ingestRun.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1 &amp;&amp; linux64]&quot; "/>
      <depends>
        <after process="fastMonHistAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="mergeFastMonTrend">
      <variables>
        <var name="fileType">fastMonTrend</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1]&quot; "/>
      <depends>
        <after process="doChunk.fastMonTrend" status="DONE"/>
      </depends>
    </process>
 
    <process name="registerFastMonTrend">
      <variables>
        <var name="parentProcess">mergeFastMonTrend</var>
        <var name="dataType">FASTMONTREND</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeFastMonTrend" status="SUCCESS"/>
      </depends>
    </process>

    <process name="ingestFastMonTrend">
      <variables>
        <var name="reportType">fastMonTrend</var>
      </variables>
      <job executable="${L1ProcROOT}/ingestTrending.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1 &amp;&amp; linux64]&quot; "/>
      <depends>
        <after process="mergeFastMonTrend" status="SUCCESS"/>
      </depends>
    </process>

    <process name="fastMonTrendAlarm">
      <variables>
        <var name="fileType">fastMonTrend</var>
      </variables>
      <job executable="${L1ProcROOT}/alarmHandler.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="mergeFastMonTrend" status="SUCCESS"/>
      </depends>
    </process>

    <process name="ingestFastMonTrendRun">
      <variables>
        <var name="reportType">fastMonTrendAlarm</var>
      </variables>
      <job executable="${L1ProcROOT}/ingestRun.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1 &amp;&amp; linux64]&quot; "/>
      <depends>
        <after process="fastMonTrendAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="fastMonTrendLogger">
      <variables>
        <var name="fileType">fastMonTrendAlarm</var>
      </variables>
      <job executable="${L1ProcROOT}/alarmLogger.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="fastMonTrendAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="registerFastMonTrendAlarm">
      <variables>
        <var name="parentProcess">fastMonTrendAlarm</var>
        <var name="dataType">fastMonTrendAlarm</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="fastMonTrendAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="mergeGcrChunks">
      <variables>
        <var name="fileType">gcr</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1]&quot; "/>
      <depends>
        <after process="doChunk.mergeGcrCrumbs" status="DONE"/>
      </depends>
    </process>

    <process name="registerGcr">
      <variables>
        <var name="parentProcess">mergeGcrChunks</var>
        <var name="dataType">GCR</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeGcrChunks" status="SUCCESS"/>
      </depends>
    </process>

    <process name="mergeMeritChunks">
      <variables>
        <var name="fileType">merit</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(mediumQ)s -sp %(highPriority)d -R &quot;select[scratch&gt;2]&quot; " />
      <depends>
        <after process="doChunk.mergeMeritCrumbs" status="DONE"/>
      </depends>
    </process>

    <process name="registerMerit">
      <variables>
        <var name="parentProcess">mergeMeritChunks</var>
        <var name="dataType">MERIT</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeMeritChunks" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="makeFT1">
      <variables>
        <var name="fileType">ft1</var>
      </variables>
      <job executable="${L1ProcROOT}/makeFT1.py" batchOptions=" -q %(mediumQ)s -sp %(highPriority)d -R &quot;select[scratch&gt;1]&quot; " />
      <depends>
        <after process="mergeMeritChunks" status="SUCCESS"/>
      </depends>
    </process>

    <process name="exportFT1">
      <variables>
        <var name="fileType">ft1</var>
      </variables>
      <job executable="${L1ProcROOT}/exportStuff.py" batchOptions=" -q %(expressQ)s -sp %(highPriority)d -R &quot;select[scratch&gt;1]&quot; " />
      <depends>
        <after process="makeFT1" status="SUCCESS"/>
      </depends>
    </process>

    <process name="registerFT1">
      <variables>
        <var name="parentProcess">makeFT1</var>
        <var name="dataType">FT1</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="makeFT1" status="SUCCESS"/>
      </depends>
    </process>

    <process name="makeLS1">
      <variables>
        <var name="fileType">ls1</var>
      </variables>
      <job executable="${L1ProcROOT}/makeFT1.py" batchOptions=" -q %(mediumQ)s -sp %(highPriority)d -R &quot;select[scratch&gt;1]&quot; " />
      <depends>
        <after process="mergeMeritChunks" status="SUCCESS"/>
      </depends>
    </process>

    <process name="exportLS1">
      <variables>
        <var name="fileType">ls1</var>
      </variables>
      <job executable="${L1ProcROOT}/exportStuff.py" batchOptions=" -q %(expressQ)s -sp %(highPriority)d -R &quot;select[scratch&gt;1]&quot; " />
      <depends>
        <after process="makeLS1" status="SUCCESS"/>
      </depends>
    </process>

    <process name="registerLS1">
      <variables>
        <var name="parentProcess">makeLS1</var>
        <var name="dataType">LS1</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="makeLS1" status="SUCCESS"/>
      </depends>
    </process>

    <process name="ft2Runs">
      <job executable="${L1ProcROOT}/ft2Entries.py" batchOptions=" -q %(longQ)s -sp %(highPriority)d -R &quot;select[scratch&gt;1]&quot; " />
      <depends>
        <after process="mergeDigi" status="SUCCESS"/>
        <after process="mergeMeritChunks" status="SUCCESS"/>
      </depends>
    </process>

    <process name="ingestFT2">
      <job executable="${L1ProcROOT}/ft2Db.py" batchOptions=" -q %(expressQ)s -sp %(highPriority)d -R &quot;select[scratch&gt;1]&quot; " />
      <depends>
        <after process="ft2Runs" status="SUCCESS"/>
      </depends>
    </process>

    <process name="makeFT2">
      <job executable="${L1ProcROOT}/makeFT2File.py" batchOptions=" -q %(shortQ)s -sp %(highPriority)d -R &quot;select[scratch&gt;1]&quot; " />
      <depends>
        <after process="ingestFT2" status="SUCCESS"/>
      </depends>
    </process>

    <process name="exportFT2">
      <variables>
        <var name="fileType">ft2</var>
      </variables>
      <job executable="${L1ProcROOT}/exportStuff.py" batchOptions=" -q %(expressQ)s -sp %(highPriority)d  -R &quot;select[scratch&gt;1]&quot; " />
      <depends>
        <after process="makeFT2" status="SUCCESS"/>
      </depends>
    </process>

    <process name="registerFT2">
      <variables>
        <var name="parentProcess">makeFT2</var>
        <var name="dataType">FT2</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="makeFT2" status="SUCCESS"/>
      </depends>
    </process>

    <process name="makeLS3">
      <job executable="${L1ProcROOT}/makeLS3.py" batchOptions=" -q %(mediumQ)s -sp %(highPriority)d -R &quot;select[scratch&gt;1]&quot; " />
      <depends>
        <after process="makeFT1" status="SUCCESS"/>
        <after process="makeFT2" status="SUCCESS"/>
      </depends>
    </process>

    <process name="exportLS3">
      <variables>
        <var name="fileType">ls3</var>
      </variables>
      <job executable="${L1ProcROOT}/exportStuff.py" batchOptions=" -q %(expressQ)s -sp %(highPriority)d -R &quot;select[scratch&gt;1]&quot; " />
      <depends>
        <after process="makeLS3" status="SUCCESS"/>
      </depends>
    </process>

    <process name="registerLS3">
      <variables>
        <var name="parentProcess">makeLS3</var>
        <var name="dataType">LS3</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="makeLS3" status="SUCCESS"/>
      </depends>
    </process>

    <process name="mergeCalChunks">
      <variables>
        <var name="fileType">cal</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;6]&quot; "/>
      <depends>
        <after process="doChunk.mergeCalCrumbs" status="DONE"/>
      </depends>
    </process>

    <process name="registerCal">
      <variables>
        <var name="parentProcess">mergeCalChunks</var>
        <var name="dataType">CAL</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeCalChunks" status="SUCCESS"/>
      </depends>
    </process>

    <process name="mergeMeritTrend">
      <variables>
        <var name="fileType">meritTrend</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1]&quot; "/>
      <depends>
        <after process="doChunk.meritTrend" status="DONE"/>
      </depends>
    </process>
 
    <process name="registerMeritTrend">
      <variables>
        <var name="parentProcess">mergeMeritTrend</var>
        <var name="dataType">MERITTREND</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeMeritTrend" status="SUCCESS"/>
      </depends>
    </process>

    <process name="ingestMeritTrend">
      <variables>
        <var name="reportType">meritTrend</var>
      </variables>
      <job executable="${L1ProcROOT}/ingestTrending.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1 &amp;&amp; linux64]&quot; "/>
      <depends>
        <after process="mergeMeritTrend" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="mergeMeritEor">
      <variables>
        <var name="fileType">meritEor</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1]&quot; "/>
      <depends>
        <after process="doChunk.meritEor" status="DONE"/>
      </depends>
    </process>
 
    <process name="registerMeritEor">
      <variables>
        <var name="parentProcess">mergeMeritEor</var>
        <var name="dataType">MERITHIST</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeMeritEor" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="mergeReconTrend">
      <variables>
        <var name="fileType">reconTrend</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1]&quot; "/>
      <depends>
        <!-- <after process="doChunk.mergeCalCrumbs" status="DONE"/> # This is not really necessary.  In the situation it was designed to protect against, we'd rather not run at all.  But we can't say that. -->
        <!-- <after process="doChunk.mergeReconCrumbs" status="DONE"/> # This is not really necessary.  In the situation it was designed to protect against, we'd rather not run at all.  But we can't say that. -->
        <after process="doChunk.reconTrend" status="DONE"/>
      </depends>
    </process>
 
    <process name="registerReconTrend">
      <variables>
        <var name="parentProcess">mergeReconTrend</var>
        <var name="dataType">RECONTREND</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeReconTrend" status="SUCCESS"/>
      </depends>
    </process>

    <process name="ingestReconTrend">
      <variables>
        <var name="reportType">reconTrend</var>
      </variables>
      <job executable="${L1ProcROOT}/ingestTrending.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1 &amp;&amp; linux64]&quot; "/>
      <depends>
        <after process="mergeReconTrend" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="reconTrendAlarm">
      <variables>
        <var name="fileType">reconTrend</var>
      </variables>
      <job executable="${L1ProcROOT}/alarmHandler.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="mergeReconTrend" status="SUCCESS"/>
      </depends>
    </process>

    <process name="ingestReconTrendRun">
      <variables>
        <var name="reportType">reconTrendAlarm</var>
      </variables>
      <job executable="${L1ProcROOT}/ingestRun.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1 &amp;&amp; linux64]&quot; "/>
      <depends>
        <after process="reconTrendAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="reconTrendLogger">
      <variables>
        <var name="fileType">reconTrendAlarm</var>
      </variables>
      <job executable="${L1ProcROOT}/alarmLogger.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="reconTrendAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="registerReconTrendAlarm">
      <variables>
        <var name="parentProcess">reconTrendAlarm</var>
        <var name="dataType">reconTrendAlarm</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="reconTrendAlarm" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="mergeReconEor">
      <variables>
        <var name="fileType">reconEor</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1]&quot; "/>
      <depends>
        <!-- <after process="doChunk.mergeCalCrumbs" status="DONE"/> # This is not really necessary.  In the situation it was designed to protect against, we'd rather not run at all.  But we can't say that. -->
        <!-- <after process="doChunk.mergeReconCrumbs" status="DONE"/> # This is not really necessary.  In the situation it was designed to protect against, we'd rather not run at all.  But we can't say that. -->
        <after process="doChunk.reconEor" status="DONE"/>
      </depends>
    </process>
 
    <process name="ingestReconEorRun">
      <variables>
        <var name="reportType">reconEorAlarm</var>
      </variables>
      <job executable="${L1ProcROOT}/ingestRun.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1 &amp;&amp; linux64]&quot; "/>
      <depends>
        <after process="reconEorAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="registerReconEor">
      <variables>
        <var name="parentProcess">mergeReconEor</var>
        <var name="dataType">RECONHIST</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeReconEor" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="reconEorAlarm">
      <variables>
        <var name="fileType">reconEor</var>
      </variables>
      <job executable="${L1ProcROOT}/alarmHandler.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="mergeReconEor" status="SUCCESS"/>
      </depends>
    </process>

    <process name="reconEorLogger">
      <variables>
        <var name="fileType">reconEorAlarm</var>
      </variables>
      <job executable="${L1ProcROOT}/alarmLogger.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="reconEorAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="registerReconEorAlarm">
      <variables>
        <var name="parentProcess">reconEorAlarm</var>
        <var name="dataType">reconEorAlarm</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="reconEorAlarm" status="SUCCESS"/>
      </depends>
    </process>

    <process name="mergeReconChunks">
      <variables>
        <var name="fileType">recon</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;20]&quot; "/>
      <depends>
        <after process="doChunk.mergeReconCrumbs" status="DONE"/>
      </depends>
    </process>

    <process name="registerRecon">
      <variables>
        <var name="parentProcess">mergeReconChunks</var>
        <var name="dataType">RECON</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeReconChunks" status="SUCCESS"/>
      </depends>
    </process>

    <process name="mergeSvacChunks">
      <variables>
        <var name="fileType">svac</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;6]&quot; "/>
      <depends>
        <after process="doChunk.mergeSvacCrumbs" status="DONE"/>
      </depends>
    </process>

    <process name="registerSvacTuple">
      <variables>
        <var name="parentProcess">mergeSvacChunks</var>
        <var name="dataType">SVAC</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeSvacChunks" status="SUCCESS"/>
      </depends>
    </process>

    <process name="checkRun">
      <job executable="${L1ProcROOT}/checkRun.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="doChunk.checkChunk" status="SUCCESS"/>
        <after process="digiEorLogger" status="SUCCESS"/>
        <after process="digiTrendLogger" status="SUCCESS"/>
        <after process="exportFT1" status="SUCCESS"/>
        <after process="exportFT2" status="SUCCESS"/>
        <after process="exportLS1" status="SUCCESS"/>
        <after process="exportLS3" status="SUCCESS"/>
        <after process="fastMonHistLogger" status="SUCCESS"/>
        <after process="fastMonTrendLogger" status="SUCCESS"/>
        <after process="ingestCalTrend" status="SUCCESS"/>
        <after process="ingestDigiTrend" status="SUCCESS"/>
        <after process="ingestFastMonTrend" status="SUCCESS"/>
        <after process="ingestMeritTrend" status="SUCCESS"/>
        <after process="ingestReconTrend" status="SUCCESS"/>
        <after process="ingestFastMonTrendRun" status="SUCCESS"/>
        <after process="ingestFastMonHistRun" status="SUCCESS"/>
        <after process="ingestFastMonErrorRun" status="SUCCESS"/>
        <after process="ingestDigiTrendRun" status="SUCCESS"/>
        <after process="ingestDigiEorRun" status="SUCCESS"/>
        <after process="ingestReconTrendRun" status="SUCCESS"/>
        <after process="ingestReconEorRun" status="SUCCESS"/>
        <after process="reconEorLogger" status="SUCCESS"/>
        <after process="reconTrendLogger" status="SUCCESS"/>
        <after process="registerAcdPlots" status="SUCCESS"/>
        <after process="registerCal" status="SUCCESS"/>
        <after process="registerCalEor" status="SUCCESS"/>
        <after process="registerCalTrend" status="SUCCESS"/>
        <after process="registerCmpDFm" status="SUCCESS"/>
        <after process="registerDigi" status="SUCCESS"/>
        <after process="registerDigiEor" status="SUCCESS"/>
        <after process="registerDigiEorAlarm" status="SUCCESS"/>
        <after process="registerDigiTrend" status="SUCCESS"/>
        <after process="registerDigiTrendAlarm" status="SUCCESS"/>
        <after process="registerFT1" status="SUCCESS"/>
        <after process="registerFT2" status="SUCCESS"/>
        <after process="registerLS1" status="SUCCESS"/>
        <after process="registerLS3" status="SUCCESS"/>
        <after process="registerFastMonError" status="SUCCESS"/>
        <after process="registerFastMonHist" status="SUCCESS"/>
        <after process="registerFastMonHistAlarm" status="SUCCESS"/>
        <after process="registerFastMonTrend" status="SUCCESS"/>
        <after process="registerFastMonTrendAlarm" status="SUCCESS"/>
        <after process="registerFastMonTuple" status="SUCCESS"/>
        <after process="registerGcr" status="SUCCESS"/>
        <after process="registerM7" status="SUCCESS"/>
        <after process="registerMerit" status="SUCCESS"/>
        <after process="registerMeritEor" status="SUCCESS"/>
        <after process="registerMeritTrend" status="SUCCESS"/>
        <after process="registerRecon" status="SUCCESS"/>
        <after process="registerReconEor" status="SUCCESS"/>
        <after process="registerReconEorAlarm" status="SUCCESS"/>
        <after process="registerReconTrend" status="SUCCESS"/>
        <after process="registerReconTrendAlarm" status="SUCCESS"/>
        <after process="registerSvacTuple" status="SUCCESS"/>
      </depends>
      <createsSubtasks>
        <subtask>cleanupCompleteRun</subtask>
      </createsSubtasks>
    </process>

    <task name="cleanupCompleteRun" version="%(L1Version)s" type="Data">

      <process name="cleanupChunks">
        <job executable="${L1ProcROOT}/deleteDirs.py" batchOptions=" -q %(mediumQ)s "/>
      </process>

      <process name="updateRunStatus">
        <script>
          <![CDATA[
%(retireScriptBody)s
]]>
        </script>
      </process>

      <process name="verify">
        <job executable="${L1ProcROOT}/verify.py" batchOptions=" -q %(mediumQ)s "/>
      </process>

      <process name="registerVerifyHisto">
        <variables>
          <var name="parentProcess">verify</var>
	  <var name="dataType">VERIFYHISTO</var>
        </variables>
        <script><![CDATA[
%(registerBody)s
]]>
        </script>
        <depends>
          <after process="verify" status="SUCCESS"/>
        </depends>
      </process>

      <process name="verifyLog">
        <job executable="${L1ProcROOT}/verifyLog.py" batchOptions=" -q %(shortQ)s "/>
        <depends>
          <after process="verify" status="SUCCESS"/>
        </depends>
      </process>

      <process name="ingestVerifyErrorRun">
        <variables>
          <var name="reportType">verifyLog</var>
        </variables>
        <job executable="${L1ProcROOT}/ingestRun.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;1 &amp;&amp; linux64]&quot; "/>
        <depends>
          <after process="verifyLog" status="SUCCESS"/>
        </depends>
      </process>

      <process name="registerVerifyLog">
        <variables>
          <var name="parentProcess">verifyLog</var>
          <var name="dataType">VERIFYLOG</var>
        </variables>
        <script><![CDATA[
%(registerBody)s
]]>
        </script>
        <depends>
          <after process="verifyLog" status="SUCCESS"/>
        </depends>
      </process>

    </task>

    <task name="doChunk" version="%(L1Version)s" type="Data">

      <prerequisites>
         <prerequisite name="CHUNK_ID" type="string"/>
         <prerequisite name="EVTFILE" type="string"/>
         <prerequisite name="HOSTLIST" type="string"/>
      </prerequisites>

      <process name="digitization">
        <job executable="${L1ProcROOT}/digitize.py" batchOptions=" -q %(mediumQ)s -sp %(highPriority)d -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; " />
      </process>
 
      <process name="fakeFT2">
        <job executable="${L1ProcROOT}/fakeFT2.py" batchOptions=" -q %(mediumQ)s -sp %(highPriority)d -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; " />
      </process>
 
      <process name="fastMonTuple">
        <variables>
          <var name="reportType">fastMonTuple</var>
        </variables>
        <job executable="${L1ProcROOT}/fastMon.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
      </process>

      <process name="fastMonHist">
        <variables>
          <var name="reportType">fastMonHist</var>
        </variables>
        <job executable="${L1ProcROOT}/fastMon.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="fastMonTuple" status="SUCCESS"/>
        </depends>
      </process>

      <process name="fastMonTrend">
        <variables>
          <var name="reportType">fastMonTrend</var>
        </variables>
        <job executable="${L1ProcROOT}/runStrip.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="fastMonTuple" status="SUCCESS"/>
        </depends>
      </process>

      <process name="digiEor">
        <variables>
          <var name="reportType">digiEor</var>
        </variables>
        <job executable="${L1ProcROOT}/runStrip.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="digitization" status="SUCCESS"/>
        </depends>
      </process>
 
      <process name="digiTrend">
        <variables>
          <var name="reportType">digiTrend</var>
        </variables>
        <job executable="${L1ProcROOT}/runStrip.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="digitization" status="SUCCESS"/>
        </depends>
      </process>
 
      <process name="calEor">
        <variables>
          <var name="reportType">calEor</var>
        </variables>
        <job executable="${L1ProcROOT}/runStrip.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="digitization" status="SUCCESS"/>
        </depends>
      </process>
 
      <process name="calTrend">
        <variables>
          <var name="reportType">calTrend</var>
        </variables>
        <job executable="${L1ProcROOT}/runStrip.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="digitization" status="SUCCESS"/>
        </depends>
      </process>
 
      <process name="setupCrumbs">
        <job executable="${L1ProcROOT}/setupCrumbs.py" batchOptions=" -q %(mediumQ)s -sp %(highPriority)d -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; " />
        <depends>
          <after process="digitization" status="SUCCESS"/>
          <after process="fakeFT2" status="SUCCESS"/>
        </depends>
        <createsSubtasks>
          <subtask>doCrumb</subtask>
        </createsSubtasks>
      </process>

      <process name="mergeMeritCrumbs">
        <variables>
          <var name="fileType">merit</var>
        </variables>
        <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(shortQ)s -sp %(highPriority)d -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; " />
        <depends>
          <after process="doCrumb.recon" status="DONE"/>
        </depends>
      </process>

      <process name="mergeReconCrumbs">
        <variables>
          <var name="fileType">recon</var>
        </variables>
        <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(shortQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="doCrumb.recon" status="DONE"/>
          <after process="mergeMeritCrumbs" status="DONE"/> <!-- This is an I/O optimization, not logically required. -->
        </depends>
      </process>

      <process name="mergeCalCrumbs">
        <variables>
          <var name="fileType">cal</var>
        </variables>
        <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(shortQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="doCrumb.recon" status="DONE"/>
          <after process="mergeReconCrumbs" status="DONE"/> <!-- This is an I/O optimization, not logically required. -->
        </depends>
      </process>

      <process name="mergeGcrCrumbs">
        <variables>
          <var name="fileType">gcr</var>
        </variables>
        <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(shortQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="doCrumb.recon" status="DONE"/>
          <after process="mergeCalCrumbs" status="DONE"/> <!-- This is an I/O optimization, not logically required. -->
        </depends>
      </process>

      <process name="mergeSvacCrumbs">
        <variables>
          <var name="fileType">svac</var>
        </variables>
        <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(shortQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="doCrumb.svacTuple" status="DONE"/>
        </depends>
      </process>

      <process name="meritEor">
        <variables>
          <var name="reportType">meritEor</var>
        </variables>
        <job executable="${L1ProcROOT}/runStrip.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="doCrumb.recon" status="SUCCESS"/>
          <after process="mergeMeritCrumbs" status="SUCCESS"/>
        </depends>
      </process>
 
      <process name="meritTrend">
        <variables>
          <var name="reportType">meritTrend</var>
        </variables>
        <job executable="${L1ProcROOT}/runStrip.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="doCrumb.recon" status="SUCCESS"/>
          <after process="mergeMeritCrumbs" status="SUCCESS"/>
        </depends>
      </process>
 
      <process name="reconEor">
        <variables>
          <var name="reportType">reconEor</var>
        </variables>
        <job executable="${L1ProcROOT}/runStrip.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="doCrumb.recon" status="SUCCESS"/>
          <after process="mergeCalCrumbs" status="SUCCESS"/>
          <after process="mergeReconCrumbs" status="SUCCESS"/>
        </depends>
      </process>
 
      <process name="reconTrend">
        <variables>
          <var name="reportType">reconTrend</var>
        </variables>
        <job executable="${L1ProcROOT}/runStrip.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="doCrumb.recon" status="SUCCESS"/>
          <after process="mergeCalCrumbs" status="SUCCESS"/>
          <after process="mergeReconCrumbs" status="SUCCESS"/>
        </depends>
      </process>
 
      <process name="cleanupCrumbs">
        <job executable="${L1ProcROOT}/deleteDirs.py" batchOptions=" -q %(shortQ)s "/>
        <depends>
          <after process="doCrumb.svacTuple" status="SUCCESS"/>
          <after process="mergeCalCrumbs" status="SUCCESS"/>
          <after process="mergeGcrCrumbs" status="SUCCESS"/>
          <after process="mergeMeritCrumbs" status="SUCCESS"/>
          <after process="mergeReconCrumbs" status="SUCCESS"/>
          <after process="mergeSvacCrumbs" status="SUCCESS"/>
        </depends>
      </process>

      <process name="checkChunk">
        <job executable="${L1ProcROOT}/checkChunk.py" batchOptions=" -q %(expressQ)s "/>
        <depends>
          <after process="calEor" status="SUCCESS"/>
          <after process="calTrend" status="SUCCESS"/>
          <after process="fastMonHist" status="SUCCESS"/>
          <after process="fastMonTrend" status="SUCCESS"/>
          <after process="cleanupCrumbs" status="SUCCESS"/>
          <after process="digiEor" status="SUCCESS"/>
          <after process="digiTrend" status="SUCCESS"/>
          <after process="meritEor" status="SUCCESS"/>
          <after process="meritTrend" status="SUCCESS"/>
          <after process="reconEor" status="SUCCESS"/>
          <after process="reconTrend" status="SUCCESS"/>
        </depends>
      </process>

      <task name="doCrumb" version="%(L1Version)s" type="Data">

        <prerequisites>
          <prerequisite name="CRUMB_ID" type="string"/>
          <prerequisite name="crumbEvents" type="string"/>
          <prerequisite name="crumbStart" type="string"/>
        </prerequisites>

        <process name="recon">
          <job executable="${L1ProcROOT}/recon.py" batchOptions=" -q %(longQ)s -sp %(highPriority)d -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; " />
        </process>

        <process name="svacTuple">
          <job executable="${L1ProcROOT}/makeSvac.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
          <depends>
            <after process="recon" status="SUCCESS"/>
          </depends>
        </process>

      </task>
     
    </task>

  </task>

  <task name="doLci" version="%(L1Version)s" type="Data">

    <prerequisites>
      <prerequisite name="RUNID" type="string"/>
      <prerequisite name="RUNSTATUS" type="string"/>
    </prerequisites>

    <process name="findChunksLci">
      <job executable="${L1ProcROOT}/findChunks.py" batchOptions=" -q %(expressQ)s -E ${L1ProcROOT}/lockFile.py "/>
      <createsSubtasks>
        <subtask>doChunkLci</subtask>
      </createsSubtasks>
    </process>

    <process name="copyM7Lci">
      <job executable="${L1ProcROOT}/copyM7.py" batchOptions=" -q %(shortQ)s " />
    </process>

    <process name="registerM7Lci">
      <variables>
        <var name="parentProcess">copyM7Lci</var>
        <var name="dataType">MAGIC7</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="copyM7Lci" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="mergeDigiLci">
      <variables>
        <var name="fileType">digi</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(mediumQ)s -R &quot;select[scratch&gt;5]&quot; "/>
      <depends>
        <after process="doChunkLci.digitizationLci" status="DONE"/>
      </depends>
    </process>

    <process name="registerDigiLci">
      <variables>
        <var name="parentProcess">mergeDigiLci</var>
        <var name="dataType">DIGI</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeDigiLci" status="SUCCESS"/>
      </depends>
    </process>
 
     <process name="mergeDigiEorLci">
      <variables>
        <var name="fileType">digiEor</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;10]&quot; "/>
      <depends>
        <after process="doChunkLci.digiEorLci" status="DONE"/>
      </depends>
    </process>
 
    <process name="registerDigiEorLci">
      <variables>
        <var name="parentProcess">mergeDigiEorLci</var>
        <var name="dataType">DIGIHIST</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeDigiEorLci" status="SUCCESS"/>
      </depends>
    </process>

    <process name="mergeFastMonErrorLci">
      <variables>
        <var name="fileType">fastMonError</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(shortQ)s "/>
      <depends>
        <after process="doChunkLci.fastMonTupleLci" status="DONE"/>
      </depends>
    </process>

    <process name="registerFastMonErrorLci">
      <variables>
        <var name="parentProcess">mergeFastMonErrorLci</var>
        <var name="dataType">FASTMONERROR</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeFastMonErrorLci" status="SUCCESS"/>
      </depends>
    </process>

    <process name="mergeFastMonTupleLci">
      <variables>
        <var name="fileType">fastMonTuple</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;10]&quot; "/>
      <depends>
        <after process="doChunkLci.fastMonTupleLci" status="DONE"/>
      </depends>
    </process>

    <process name="registerFastMonTupleLci">
      <variables>
        <var name="parentProcess">mergeFastMonTupleLci</var>
        <var name="dataType">FASTMONTUPLE</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeFastMonTupleLci" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="mergeFastMonHistLci">
      <variables>
        <var name="fileType">fastMonHist</var>
      </variables>
      <job executable="${L1ProcROOT}/mergeStuff.py" batchOptions=" -q %(longQ)s -R &quot;select[scratch&gt;10]&quot; "/>
      <depends>
        <after process="doChunkLci.fastMonHistLci" status="DONE"/>
      </depends>
    </process>

    <process name="registerFastMonHistLci">
      <variables>
        <var name="parentProcess">mergeFastMonHistLci</var>
        <var name="dataType">FASTMONHIST</var>
      </variables>
      <script><![CDATA[
%(registerBody)s
]]>
      </script>
      <depends>
        <after process="mergeFastMonHistLci" status="SUCCESS"/>
      </depends>
    </process>
 
    <process name="checkRunLci">
      <job executable="${L1ProcROOT}/checkRun.py" batchOptions=" -q %(expressQ)s "/>
      <depends>
        <after process="doChunkLci.checkChunkLci" status="SUCCESS"/>
        <after process="registerDigiLci" status="SUCCESS"/>
        <after process="registerDigiEorLci" status="SUCCESS"/>
        <after process="registerFastMonErrorLci" status="SUCCESS"/>
        <after process="registerFastMonHistLci" status="SUCCESS"/>
        <after process="registerFastMonTupleLci" status="SUCCESS"/>
        <after process="registerM7Lci" status="SUCCESS"/>
      </depends>
      <createsSubtasks>
        <subtask>cleanupCompleteRunLci</subtask>
      </createsSubtasks>
    </process>

    <task name="cleanupCompleteRunLci" version="%(L1Version)s" type="Data">

      <process name="cleanupChunksLci">
        <job executable="${L1ProcROOT}/deleteDirs.py" batchOptions=" -q %(mediumQ)s "/>
      </process>

      <process name="updateRunStatusLci">
        <script>
          <![CDATA[
%(retireScriptBody)s
]]>
        </script>
      </process>

    </task>

    <task name="doChunkLci" version="%(L1Version)s" type="Data">

      <prerequisites>
         <prerequisite name="CHUNK_ID" type="string"/>
         <prerequisite name="EVTFILE" type="string"/>
         <prerequisite name="HOSTLIST" type="string"/>
      </prerequisites>

      <process name="digitizationLci">
        <job executable="${L1ProcROOT}/digitize.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
      </process>
 
      <process name="fastMonTupleLci">
        <variables>
          <var name="reportType">fastMonTuple</var>
        </variables>
        <job executable="${L1ProcROOT}/fastMon.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
      </process>
 
      <process name="fastMonHistLci">
        <variables>
          <var name="reportType">fastMonHist</var>
        </variables>
        <job executable="${L1ProcROOT}/fastMon.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="fastMonTupleLci" status="SUCCESS"/>
        </depends>
      </process>

      <process name="digiEorLci">
        <variables>
          <var name="reportType">digiEor</var>
        </variables>
        <job executable="${L1ProcROOT}/runStrip.py" batchOptions=" -q %(longQ)s -m &quot;${HOSTLIST}&quot; -R &quot;select[scratch&gt;1]&quot; "/>
        <depends>
          <after process="digitizationLci" status="SUCCESS"/>
        </depends>
      </process>
 
      <process name="checkChunkLci">
        <job executable="${L1ProcROOT}/checkChunk.py" batchOptions=" -q %(expressQ)s "/>
        <depends>
          <after process="fastMonHistLci" status="SUCCESS"/>
          <after process="digiEorLci" status="SUCCESS"/>
        </depends>
      </process>

    </task>

  </task>

  <task name="cleanupIncompleteRun" version="%(L1Version)s" type="Data">

    <prerequisites>
      <prerequisite name="RUNID" type="string"/>
      <prerequisite name="RUNSTATUS" type="string"/>
    </prerequisites>

    <process name="cleanupChunksInc">
      <job executable="${L1ProcROOT}/deleteDirs.py" batchOptions=" -q %(mediumQ)s "/>
    </process>

    <process name="updateRunStatusInc">
      <script>
        <![CDATA[
%(retireScriptBody)s
]]>
      </script>
    </process>

  </task>

</task>
</pipeline>

